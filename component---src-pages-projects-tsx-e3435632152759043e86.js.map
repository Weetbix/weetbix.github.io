{"version":3,"sources":["webpack:///./src/pages/projects.tsx"],"names":["PageHeader","styled","h1","StyledProjectSummary","ProjectSummary","Projects","data","projectSummaries","group","map","g","nodes","n","key","fields","slug","href","title","frontmatter","summary","languages","thumb","thumbnail","childImageSharp","fixed"],"mappings":"2FAAA,oEAOMA,EAAaC,IAAOC,GAAV,2EAAGD,CAAH,yHAWVE,EAAuBF,YAAOG,KAAV,qFAAGH,CAAH,mFAmCXI,UAtBwC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACxD,OACE,kBAAC,IAAD,KACE,kBAACN,EAAD,iBACCM,EAAKC,iBAAiBC,MAAMC,KAAI,SAAAC,GAAC,OAChCA,EAAEC,MAAMF,KAAI,SAAAG,GAAK,QACf,OACE,uBAAGC,IAAKD,EAAEE,OAAOC,KAAMC,KAAMJ,EAAEE,OAAOC,MACpC,kBAACZ,EAAD,CACEc,MAAOL,EAAEM,YAAYD,MACrBE,QAASP,EAAEM,YAAYC,QACvBC,UAAWR,EAAEM,YAAYE,UACzBC,MAAK,UAAET,EAAEE,OAAOQ,iBAAX,iBAAE,EAAoBC,uBAAtB,aAAE,EAAqCC","file":"component---src-pages-projects-tsx-e3435632152759043e86.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { ProjectsPageQuery } from \"../../graphql-types\";\nimport CenteredPage from \"../components/CenteredPage\";\nimport ProjectSummary from \"../components/ProjectSummary\";\n\nconst PageHeader = styled.h1`\n  line-height: 30px;\n  margin-top: 180px;\n  margin-bottom: 140px;\n\n  @media (max-width: 768px) {\n    margin-top: 80px;\n    margin-bottom: 80px;\n  }\n`;\n\nconst StyledProjectSummary = styled(ProjectSummary)`\n  margin-bottom: 140px;\n\n  &:hover {\n    transform: scale(1.01);\n    transition: transform 0.2s;\n  }\n`;\n\ntype ProjectsPageProps = {\n  data: ProjectsPageQuery;\n};\n\nconst Projects: FunctionComponent<ProjectsPageProps> = ({ data }) => {\n  return (\n    <CenteredPage>\n      <PageHeader>Projects</PageHeader>\n      {data.projectSummaries.group.map(g =>\n        g.nodes.map(n => {\n          return (\n            <a key={n.fields.slug} href={n.fields.slug}>\n              <StyledProjectSummary\n                title={n.frontmatter.title}\n                summary={n.frontmatter.summary}\n                languages={n.frontmatter.languages}\n                thumb={n.fields.thumbnail?.childImageSharp?.fixed}\n              />\n            </a>\n          );\n        })\n      )}\n    </CenteredPage>\n  );\n};\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n  fragment ProjectSummaryFrag on MarkdownRemarkFrontmatter {\n    title\n    category\n    caption\n    languages\n    libraries\n    order\n    summary\n    team\n    date\n  }\n\n  query ProjectsPage {\n    projectSummaries: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { type: { eq: \"project\" } } }\n    ) {\n      group(field: frontmatter___category) {\n        totalCount\n        category: fieldValue\n        nodes {\n          frontmatter {\n            ...ProjectSummaryFrag\n          }\n          fields {\n            slug\n            thumbnail {\n              ...ProjectThumbnail\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}